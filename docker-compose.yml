services:
  service_a:
    build:
      args:
        SERVICE_PATH: "service-input"
        SERVICE_PORT: "8080"
      dockerfile: ./Dockerfile
      context: .
    ports:
      - "8080:8080"
    depends_on:
      - otel-collector

  service_b:
    build:
      args:
        SERVICE_PATH: "service-orchestrator"
        SERVICE_PORT: "8081"
      dockerfile: ./Dockerfile
      context: .
    ports:
      - "8081:8081"
    depends_on:
      - otel-collector

  zipkin:
    image: openzipkin/zipkin:3
    restart: always
    ports:
      - "9411:9411"

  otel-collector:
    image: otel/opentelemetry-collector:0.128.0
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    # Uncomment the following lines if enable prometheus service
    # depends_on:
    #   - prometheus

  # Uncomment the following lines to enable Jaeger for tracing
  # jaeger-all-in-one:
    # image: jaegertracing/all-in-one:latest
    # restart: always
    # ports:
      # - "16686:16686"
      # - "14268"
      # - "14250"

  # Uncomment the following lines to enable Prometheus for metrics
  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus:v2.51.2
  #   restart: always
  #   volumes:
  #     - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"